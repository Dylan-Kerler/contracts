{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x31215946fc803ef566861115fa26f90200a8b003b253bbff06a046bab0196a66",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xf4d0e781b19568978361039623254fa5d5f162ce3a515163f8792f67c604ab22",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a86c4fb1abf4feebe027dfdea3a114b08f20bbe02618562b978d5d0d99565a9b": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x41c0e1a3cdccc3cf342066a5baa5f68a541a1b38fc3f85492216f8abddb54e42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8843",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:81"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:85"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:94"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:95"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7395_storage)",
            "src": "contracts/SettlementsV2.sol:176"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8843": {
            "label": "contract ISettlementsLegacy"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7395_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7395_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "030d1d2a9a06d078289a74310d60891473586b97a851b939116263dbe867de68": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x298a387e7f1ca8e9e8c0a4488a73320d3eda80d3ef817d450342eb34aa05b931",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8939",
            "src": "contracts/SettlementsV2.sol:69"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8918",
            "src": "contracts/SettlementsV2.sol:72"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:75"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:78"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:81"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:85"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7385_storage)",
            "src": "contracts/SettlementsV2.sol:166"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8939": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8918": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7385_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7385_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55807bd73ef5863b26093d10c7005d006bb8c4e9224afab79eda6c1a12357be3": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x108b9e635e104c56f95141bcf9885b9b1ce947f4f1cf994d50fb840ca72f1c5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8897",
            "src": "contracts/SettlementsV2.sol:69"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8876",
            "src": "contracts/SettlementsV2.sol:72"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:75"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:78"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:81"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:85"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7385_storage)",
            "src": "contracts/SettlementsV2.sol:166"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8897": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8876": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7385_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7385_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b4285d098f56be00ca65734c2544a652bc23f638f5cbf09bad25b9234607b5b6": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xf7185a9b186ce2d8fda25afbba9cb9c365418baf57ce3a915114fbcfefbd0248",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8885",
            "src": "contracts/SettlementsV2.sol:69"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8864",
            "src": "contracts/SettlementsV2.sol:72"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:75"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:78"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:81"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:85"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7385_storage)",
            "src": "contracts/SettlementsV2.sol:166"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8885": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8864": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7385_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7385_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a695942309d9ae695d4cf32019c077668661c31a61bc3880da981a5b998edc6": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x670da78d871a5fb0e755cec7015e6af5831a8736fdac3d348601f095f09acd37",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8897",
            "src": "contracts/SettlementsV2.sol:69"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8876",
            "src": "contracts/SettlementsV2.sol:72"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:75"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:78"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:81"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:85"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7385_storage)",
            "src": "contracts/SettlementsV2.sol:166"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8897": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8876": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7385_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7385_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bebc77d7d422a468c60c20e4dcb0768657ce14a1e6c5c8dca9fb6b4273876d6a": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x8d3cb1706bd7c51e69133eef52d65c14420e59ea0ae83034089312634d82b444",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8947",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8926",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6272)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7418_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8947": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8926": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6272)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6272": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7418_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7418_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "de559a8e98baa6962fcbcfa05ac2a1efffbe0507c69aa15152fea7c5631c6c96": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x5867f54955e52f239739c0dc6a3d0387d917ee6e03c74fd0709637102041d8a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8903",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8882",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8903": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8882": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "91812144651388d6f614bc414408688f15bff39865bb6b5af386de49e6ac3e74": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xe71074807e08ba1dc95e7331b8f68c04916474c6a2bf4dad67d72f6d2617cf79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8945",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8924",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8945": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8924": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "56ea9b529ed1bfc5414c383f3dbdff8dd246536867accec2da5afadb590647b4": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x41424cab0dd28c9f7c6f777516d2154da855c5f2f55f78f4b020bf3ff4534996",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8954",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8933",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8954": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8933": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "210e54e5d24278497ebb2f2aa4b091e5d7d2d0c78380be3b82f196113130788c": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x2e3daf52bc706fa32972cbd9bc200e0d9eb3e0041d6ff2f326b54df098cca297",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8956",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8935",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8956": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8935": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd382a6a38a5a25c9d1382acc94c189a6922f145aa574c62e5e16099c5762b4a": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xd72bab664ee37227aee5bbe17eee1379d4ba2198736e0c45f14da4f28018e06d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8960",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8939",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8960": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8939": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "356ab34f433d80bbc188734fc97d4edce20251600e8da2e2e329b41c61d26bb7": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xda169d56aac6fef30c78b08ad72c36dad8ec923bb9ea5bb47b37b73054b0b5b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8970",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8949",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8970": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8949": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efb03801efcae6a6360e45a4ebeb37fdf2758fc46d789ee70a9c7a04fd2caf70": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x7d54692cc7c5eda12a9b3244d15016757a6d337684b1c838bb131b37bf1f754e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8980",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8959",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:84"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:88"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7386_storage)",
            "src": "contracts/SettlementsV2.sol:167"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8980": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8959": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7386_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7386_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "466a08cce43d789ee0df2cc7a846629d94966ecdd222b93aa966fe571a8f218f": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xcf71890c060809e0ddec066077468de1ff1eb95a716e827d10ac898691552477",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8993",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8972",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8993": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8972": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c48e40f771cc4f0726957994705a76cc77a2f8ae89f5ec9d7080ce48c6b3592": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xe5870454e73f22cefea008195a98fa13b74012defb6acb080c8a31917c62ce1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(ISettlementsLegacy)8963",
            "src": "contracts/SettlementsV2.sol:70"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8942",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(ISettlementsLegacy)8963": {
            "label": "contract ISettlementsLegacy"
          },
          "t_contract(TokenURI)8942": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0056197aec0169538beafa3a00725090393ce0469106cac01f8979831204799": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x6d031d11ad258c17d4e38872547ddfb7dcc3f50dddbe6406cac94dd43d8e7eb9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8942",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8942": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "627055c9c0305d7c4ae057d5faa7165aec84a6fa7bf2fc5442c2eb62ca764435": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x3317bfb6356b1ea9af20fa136d5fecde55bf081890340029a546f54628157f59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8984",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8984": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea10b9c6c7cace55d0d0cd17e54ddcc8bab400d1370cf1d1b9109bc7eb004752": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x1cd6b3e8956615d467af5b8e4b9b1d32a5fa9b025dcb60606ebd1aa6197648c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8948",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8948": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82737ab2661f901f6051a1b8c24d01d352dc33642e60faee5eb79ced4f791f17": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x93784fd7f953e4c4f0089cf0e1f8b8a2e9e6d5a4d08664482f72fff4514c7c4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8966",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8966": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "59917995e573ee96e046dca9699bc38d86d2203065867787be20e7199acf8d38": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x05763e66f8d1948e3dcda2a63ef96a9135bdcc5d757ada19e9de25102b93f42e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8929",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8929": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "287f8ac1784cdc7d93623d878fc4cf9798db4d05ee5d7e3367012fe6cf7b7914": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x82fca5acd6d7ba6adbbdbad38c51ab0eeef638194349b9e33fdbeca00ff54c30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8963",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8963": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9853f8c11154aa0dd2a8f6e57515c00ea14ddabeb959cfb0bc899248bca8f906": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x9aca625d31bf155f17325a3fb1115da55a282ee3110fc03c2d9bf2483dc407a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8966",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8966": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8a1c07f3590ed67ab64b75afee60010f02ddc6652675ea66ade351832e483123": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x02ce08633c7afb75e1a35cb36385d5a3589c9349178c60e7ade702961a69be43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8963",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8963": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c939bc8d1e117cab49b3c4550686bb800b841a02ba1868608659eb4722b426dd": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x3365374d5123e40daef71f323f22aa15a48158066c3208126bd13b9bc789a049",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8961",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8961": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0e9c09825c4ff014ca028d09a25da506e35942b08d4e008a29a72d464c8971f2": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x39bfbe0dd3622aaa7765948fa157d86410dd4f4b5e93d48a31d5bcc6383f1170",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)8982",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)8982": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23221122ad8999e91d66e94d7391d299e033fdabe390ef4bb9d2d9affe28452d": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x95f19b8c547b170cb2c10e6c3f9e33028fc8acab3ec91a5a8340a69151c7e86c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)9136",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)9136": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "47791febfee157c459b81b62a18c0dfc4e6efab4ca43c27c2332b386bedeb433": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x7a11940e271bb02dc6b0c5fc4cadde03170b3cc8929be24de814eff420720faf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)9134",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)9134": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ea6a98db41c4b2f67847429a351383d3eb191a5a070e5321a0424661fd31f60": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xe1eb65e9b1569bc301f77cfc65dae293f86bb051a98fce282f17dd21b394cde8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "legacySettlements",
            "type": "t_contract(SettlementsLegacy)7164",
            "src": "contracts/SettlementsV2.sol:71"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenURIHelperContract",
            "type": "t_contract(TokenURI)9119",
            "src": "contracts/SettlementsV2.sol:73"
          },
          {
            "contract": "SettlementsV2",
            "label": "civMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:76"
          },
          {
            "contract": "SettlementsV2",
            "label": "realmMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:77"
          },
          {
            "contract": "SettlementsV2",
            "label": "moralMultipliers",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/SettlementsV2.sol:79"
          },
          {
            "contract": "SettlementsV2",
            "label": "resourceTokenAddresses",
            "type": "t_array(t_contract(ERC20Mintable)6240)dyn_storage",
            "src": "contracts/SettlementsV2.sol:82"
          },
          {
            "contract": "SettlementsV2",
            "label": "tokenIdToLastHarvest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SettlementsV2.sol:83"
          },
          {
            "contract": "SettlementsV2",
            "label": "_sizes",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:86"
          },
          {
            "contract": "SettlementsV2",
            "label": "_spirits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:87"
          },
          {
            "contract": "SettlementsV2",
            "label": "_ages",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:89"
          },
          {
            "contract": "SettlementsV2",
            "label": "_resources",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:90"
          },
          {
            "contract": "SettlementsV2",
            "label": "_morales",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:91"
          },
          {
            "contract": "SettlementsV2",
            "label": "_governments",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:92"
          },
          {
            "contract": "SettlementsV2",
            "label": "_realms",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/SettlementsV2.sol:93"
          },
          {
            "contract": "SettlementsV2",
            "label": "attrIndex",
            "type": "t_mapping(t_uint256,t_struct(Attributes)7399_storage)",
            "src": "contracts/SettlementsV2.sol:174"
          }
        ],
        "types": {
          "t_contract(SettlementsLegacy)7164": {
            "label": "contract SettlementsLegacy"
          },
          "t_contract(TokenURI)9119": {
            "label": "contract TokenURI"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_contract(ERC20Mintable)6240)dyn_storage": {
            "label": "contract ERC20Mintable[]"
          },
          "t_contract(ERC20Mintable)6240": {
            "label": "contract ERC20Mintable"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Attributes)7399_storage)": {
            "label": "mapping(uint256 => struct SettlementsV2.Attributes)"
          },
          "t_struct(Attributes)7399_storage": {
            "label": "struct SettlementsV2.Attributes",
            "members": [
              {
                "label": "size",
                "type": "t_uint8"
              },
              {
                "label": "spirit",
                "type": "t_uint8"
              },
              {
                "label": "age",
                "type": "t_uint8"
              },
              {
                "label": "resource",
                "type": "t_uint8"
              },
              {
                "label": "morale",
                "type": "t_uint8"
              },
              {
                "label": "government",
                "type": "t_uint8"
              },
              {
                "label": "turns",
                "type": "t_uint8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
